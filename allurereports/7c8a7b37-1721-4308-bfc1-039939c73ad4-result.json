{"name": "test_login_popup_exists", "status": "broken", "statusDetails": {"message": "TypeError: a bytes-like object is required, not 'dict'", "trace": "test_install_app = None\n\n    def test_login_popup_exists(test_install_app):\n        sleep(20.0)\n        # Sampad\n        # try:\n        #     assert_equal(\"Real opponents\", \"Rddeal opponents\", \"Checking the text exist\")\n        # except AssertionError:\n        #     log(\"Assertion error\", timestamp=time.time(), desc=\"Assertion error\", snapshot=False)\n        # wait(\".\\\\images\\\\ageCheckbox.png\")\n        # touch(Template(\".\\\\images\\\\ageCheckbox.png\"))\n        # wait(Template(\".\\\\images\\\\btnLetsPlay.png\"))\n>       allure.attach(snapshot(filename=\"123.jpg\",msg=\"Homepage screenshot\",quality=90,max_size=800))\n\ntestcases\\test_login.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\users\\rh0539\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\allure_commons\\_allure.py:179: in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\nc:\\users\\rh0539\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nc:\\users\\rh0539\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nc:\\users\\rh0539\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\allure_pytest\\listener.py:222: in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\nc:\\users\\rh0539\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\allure_commons\\reporter.py:119: in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\nc:\\users\\rh0539\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nc:\\users\\rh0539\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <allure_commons.logger.AllureFileLogger object at 0x000001BD5F059910>\nbody = {'resolution': (1440, 2560), 'screen': '1645765652340.jpg'}\nfile_name = '5ccbbfbe-aed3-462c-98ce-9a635422e4cc-attachment.attach'\n\n    @hookimpl\n    def report_attached_data(self, body, file_name):\n        destination = os.path.join(self._report_dir, file_name)\n        with open(destination, 'wb') as attached_file:\n            if isinstance(body, text_type):\n                attached_file.write(body.encode('utf-8'))\n            else:\n>               attached_file.write(body)\nE               TypeError: a bytes-like object is required, not 'dict'\n\nc:\\users\\rh0539\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\allure_commons\\logger.py:62: TypeError"}, "attachments": [{"source": "5ccbbfbe-aed3-462c-98ce-9a635422e4cc-attachment.attach"}, {"name": "log", "source": "9dab24a9-c13b-482f-adcd-9adf4bfb913d-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "9fc00060-5413-47d3-b7c3-4a0fa17daf6c-attachment.txt", "type": "text/plain"}], "start": 1645765629158, "stop": 1645765652395, "uuid": "82998ec5-384a-41bd-be31-fb45eb902a71", "historyId": "1ecbd197d5b0649b65b66a295749f99d", "testCaseId": "838ba3deeaae603ec8131e3d2e540e23", "fullName": "testcases.test_login#test_login_popup_exists", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "ALIPL2130"}, {"name": "thread", "value": "5860-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_login"}]}